#include <iostream>
#include <unordered_map>
#include <regex>   
using namespace std;
int main() {
    while(true){
    string s;
    unordered_map<char, int> R = { {'I', 1},{'V', 5},{'X', 10},{'L', 50},{'C', 100},{'D', 500},{'M', 1000}};
        regex validRoman("^M{0,3}(CM|CD|D?C{0,3})"
         "(XC|XL|L?X{0,3})(IX|IV|V?I{0,3})$");
        
    cout << "Enter a Roman numeral: ";
    cin >> s; 
        if (!regex_match(s, validRoman)) {
            cout << "PLEASE ENTER A VALID ROMAN NUMERAL." << endl;
            continue; 
        }
    int result = 0;
    for (int i = 0; i < s.length(); i++) {
        if (i + 1 < s.length() && R[s[i]] < R[s[i + 1]]) {
            result = result - R[s[i]];
        }
        else {
            result = result + R[s[i]];
        }
    }
    cout << "The number is: " << result << endl;
    }
    return 0;
}
